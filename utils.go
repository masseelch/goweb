package gowebapp

import (
	"github.com/jinzhu/inflection"
	"regexp"
	"strings"
	"text/template"
)

const (
	KAnnotationPrefix            = "generator:"
	KModelAnnotation             = KAnnotationPrefix + "Model"

	KGeneratedFileWarningComment = `
// Code generated by go generate; DO NOT EDIT.
// This file was generated at
// {{.Timestamp}}
`
)

var (
	matchFirstCap        = regexp.MustCompile("(.)([A-Z][a-z]+)")
	matchAllCap          = regexp.MustCompile("([a-z0-9])([A-Z])")
	matchGoFile          = regexp.MustCompile("(.)\\.go$")
	matchGeneratedGoFile = regexp.MustCompile("(.)\\.g\\.go$")
	funcMap              = template.FuncMap{
		"ToLower": strings.ToLower,
		"Plural":  inflection.Plural,
	}
)

func ToSnakeCase(str string) string {
	snake := matchFirstCap.ReplaceAllString(str, "${1}_${2}")
	snake = matchAllCap.ReplaceAllString(snake, "${1}_${2}")
	return strings.ToLower(snake)
}
